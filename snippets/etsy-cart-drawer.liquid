{% comment %}
  Etsy-style cart drawer that slides in from the right when items are added to cart
  Usage: {% render 'etsy-cart-drawer' %}
{% endcomment %}

<div id="etsy-cart-drawer" class="fixed inset-0 overflow-hidden z-50 hidden" role="dialog" aria-modal="true">  <div class="absolute inset-0 overflow-hidden">
    <!-- Background overlay -->
    <div class="absolute inset-0 bg-black/50 transition-all duration-300 opacity-0" id="cart-backdrop"></div>
    
    <div class="fixed inset-y-0 right-0 pl-10 max-w-full flex">
      <!-- Cart drawer panel -->
      <div class="w-screen max-w-md transform transition ease-in-out duration-500">
        <div class="h-full flex flex-col bg-white shadow-2xl rounded-l-2xl overflow-hidden"><!-- Cart header -->
          <div class="flex-shrink-0 px-6 py-6 bg-gradient-to-r from-orange-600 to-[#f47e42] sm:px-8 relative overflow-hidden">
            <div class="absolute top-0 right-0 w-24 h-24 opacity-10">
              <svg viewBox="0 0 24 24" fill="currentColor" class="text-white h-full w-full">
                <path d="M17,18C15.89,18 15,18.89 15,20A2,2 0 0,0 17,22A2,2 0 0,0 19,20C19,18.89 18.1,18 17,18M1,2V4H3L6.6,11.59L5.24,14.04C5.09,14.32 5,14.65 5,15A2,2 0 0,0 7,17H19V15H7.42A0.25,0.25 0 0,1 7.17,14.75C7.17,14.7 7.18,14.66 7.2,14.63L8.1,13H15.55C16.3,13 16.96,12.58 17.3,11.97L20.88,5.5C20.95,5.34 21,5.17 21,5A1,1 0 0,0 20,4H5.21L4.27,2M7,18C5.89,18 5,18.89 5,20A2,2 0 0,0 7,22A2,2 0 0,0 9,20C9,18.89 8.1,18 7,18Z" />
              </svg>
            </div>
            <div class="flex items-center justify-between relative z-10">
              <div class="flex items-center">
                <svg class="h-7 w-7 text-white mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
                </svg>
                <h2 class="text-2xl font-bold text-white" id="slide-over-title">Your Cart</h2>
              </div>
              <button type="button" class="p-2.5 rounded-full bg-white/20 text-white hover:bg-white/30 focus:outline-none focus:ring-2 focus:ring-white transition-all duration-200 hover:rotate-90" id="close-cart-button">
                <span class="sr-only">Close panel</span>
                <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>
            <div class="mt-3 flex items-center">
              <span class="inline-flex items-center justify-center px-3 py-1.5 text-sm font-bold leading-none bg-white text-orange-600 rounded-full mr-3 shadow-sm">
                <span id="cart-item-count">{{ cart.item_count }}</span>
              </span>
              <p class="text-white font-medium text-lg">
                {% if cart.item_count == 1 %}item{% else %}items{% endif %} in your cart
              </p>
            </div>
          </div>          <!-- Cart items with enhanced contrast background -->
          <div class="flex-1 py-8 overflow-y-auto px-6 sm:px-8 bg-gray-50">
            {% if cart.item_count > 0 %}
              <ul role="list" class="divide-y divide-gray-200">
                {% for item in cart.items %}
                  <li class="py-6 flex group">
                    <!-- Item image -->
                    <div class="flex-shrink-0 w-24 h-24 bg-white rounded-lg overflow-hidden shadow-sm border border-gray-100 group-hover:shadow-md transition-all duration-300">
                      {% if item.image != blank %}
                        <img src="{{ item.image | image_url: width: 200 }}" 
                             alt="{{ item.image.alt | escape }}" 
                             width="200" height="200"
                             class="w-full h-full object-center object-cover group-hover:scale-105 transition-all duration-500">
                      {% else %}
                        <div class="w-full h-full flex items-center justify-center bg-gray-100">
                          <span class="text-gray-500 text-xs">No image</span>
                        </div>
                      {% endif %}
                    </div>

                    <!-- Item details -->
                    <div class="ml-5 flex-1 flex flex-col">                      <div>                        <div class="flex justify-between text-base font-medium text-gray-900">
                          <h3>
                            <a href="{{ item.url }}" class="hover:text-orange-600 transition-colors duration-200">{{ item.product.title }}</a>
                          </h3>
                          <p class="ml-4 font-bold text-base text-gray-900">{{ item.final_line_price | money }}</p>
                        </div>
                        <p class="mt-1 text-sm text-gray-500">{{ item.vendor }}</p>
                          <!-- Variant details with enhanced styling -->
                        {% if item.product.has_only_default_variant == false %}
                          <p class="mt-1.5 text-sm text-gray-500">
                            {% for option in item.product.options_with_values %}
                              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-700 mr-2 mb-1">
                                {{ option.name }}: {{ item.variant.options[forloop.index0] }}
                              </span>
                            {% endfor %}
                          </p>
                        {% endif %}
                      </div>
                      
                      <div class="flex-1 flex items-end justify-between text-sm mt-4">                        <!-- Quantity selector with enhanced contrast -->
                        <div class="flex items-center">
                          <span class="text-gray-700 mr-3 font-medium">Qty</span>
                          <div class="border border-gray-300 rounded-full flex shadow-sm overflow-hidden bg-white">                            <a href="{{ routes.cart_change_url }}?line={{ forloop.index }}&quantity={{ item.quantity | minus: 1 }}" 
                               class="px-3 py-1.5 text-gray-700 hover:bg-orange-600 hover:text-white focus:outline-none transition-colors duration-200 font-medium">
                              -
                            </a>
                            <span class="px-3 py-1.5 bg-white font-medium text-gray-900">{{ item.quantity }}</span>                            <a href="{{ routes.cart_change_url }}?line={{ forloop.index }}&quantity={{ item.quantity | plus: 1 }}"
                               class="px-3 py-1.5 text-gray-700 hover:bg-orange-600 hover:text-white focus:outline-none transition-colors duration-200 font-medium">
                              +
                            </a>
                          </div>
                        </div>

                        <!-- Remove button -->
                        <div class="flex">
                          <a href="{{ routes.cart_change_url }}?line={{ forloop.index }}&quantity=0" 
                             class="inline-flex items-center font-medium text-orange-600 hover:text-white hover:bg-orange-600 px-3 py-1 rounded-full border border-orange-600 hover:border-transparent transition-all duration-200">
                            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                            </svg>
                            Remove
                          </a>
                        </div>
                      </div>
                    </div>
                  </li>
                {% endfor %}
              </ul>            {% else %}
              <div class="text-center py-12">
                <div class="mx-auto h-28 w-28 text-gray-200 bg-gray-50 rounded-full flex items-center justify-center">
                  <svg class="h-16 w-16 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
                  </svg>
                </div>
                <h3 class="mt-6 text-xl font-bold text-gray-800">Your cart is empty</h3>
                <p class="mt-2 text-base text-gray-500 max-w-xs mx-auto">Looks like you haven't added anything to your cart yet.</p>
                <div class="mt-8">
                  <a href="/collections/all" class="inline-flex items-center px-6 py-3 border border-transparent rounded-full shadow-md text-base font-medium text-white bg-orange-600 hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-600 transition-all duration-200">
                    <svg class="mr-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                    </svg>
                    Browse Products
                  </a>
                </div>
              </div>
            {% endif %}
          </div>
          
          <!-- Cart footer with totals and checkout -->
          {% if cart.item_count > 0 %}
            <div class="border-t border-gray-200 py-6 px-6 sm:px-8 bg-white shadow-inner">
              <!-- Subtotals -->
              <div class="flex justify-between text-lg font-bold text-gray-900">
                <p>Subtotal</p>
                <p>{{ cart.total_price | money }}</p>
              </div>
              <p class="mt-1.5 text-sm text-gray-500">Shipping and taxes calculated at checkout.</p>
              
              <!-- Special offers -->
              {% if cart.total_price < 3500 %}
                <div class="mt-5 bg-gradient-to-r from-orange-50 to-yellow-50 rounded-xl p-5 border border-orange-100">
                  <div class="flex items-start">
                    <svg class="h-6 w-6 text-orange-600 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd" />
                    </svg>
                    <p class="ml-3 text-sm text-gray-700">
                      Add <span class="font-bold text-orange-600">{{ 3500 | minus: cart.total_price | money }}</span> more to get <span class="font-bold">FREE shipping</span>
                    </p>
                  </div>
                  <div class="mt-3 w-full bg-gray-200 rounded-full h-2.5 overflow-hidden">
                    <div class="bg-gradient-to-r from-orange-600 to-[#f47e42] h-2.5 rounded-full shadow-inner" style="width: {{ cart.total_price | divided_by: 35 }}%"></div>
                  </div>
                </div>
              {% endif %}
              
              <!-- Checkout and continue shopping buttons -->
              <div class="mt-6">
                <a href="/checkout" class="flex justify-center items-center px-6 py-3.5 border border-transparent rounded-full shadow-md text-base font-bold text-white bg-orange-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-600 transition-colors duration-300">
                  <svg class="mr-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
                  </svg>
                  Proceed to Checkout
                </a>
                <div class="mt-4 flex justify-center text-sm text-center text-gray-500">
                  <p>
                    or 
                    <button type="button" id="continue-shopping" class="text-orange-600 font-medium hover:text-orange-700 transition-colors duration-200 group">
                      Continue Shopping
                      <span aria-hidden="true" class="group-hover:ml-0.5 transition-all duration-200"> →</span>
                    </button>
                  </p>
                </div>
              </div>
              
              <!-- Payment icons -->
              <div class="mt-8 flex justify-center">
                <div class="flex space-x-4 items-center">
                  <img src="{{ 'payment-visa.svg' | asset_url }}" alt="Visa" width="40" height="32" class="h-8 opacity-80 hover:opacity-100 transition-opacity duration-200">
                  <img src="{{ 'payment-mastercard.svg' | asset_url }}" alt="Mastercard" width="40" height="32" class="h-8 opacity-80 hover:opacity-100 transition-opacity duration-200">
                  <img src="{{ 'payment-amex.svg' | asset_url }}" alt="American Express" width="40" height="32" class="h-8 opacity-80 hover:opacity-100 transition-opacity duration-200">
                  <img src="{{ 'payment-paypal.svg' | asset_url }}" alt="PayPal" width="40" height="32" class="h-8 opacity-80 hover:opacity-100 transition-opacity duration-200">
                </div>
              </div>
            </div>
          {% endif %}
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Variables
    const cartDrawer = document.getElementById('etsy-cart-drawer');
    const cartDrawerPanel = cartDrawer.querySelector('.max-w-md');
    const closeCartButton = document.getElementById('close-cart-button');
    const cartBackdrop = document.getElementById('cart-backdrop');
    const continueShoppingButton = document.getElementById('continue-shopping');
    const addToCartForms = document.querySelectorAll('form[action="/cart/add"]');
    const cartItemCount = document.getElementById('cart-item-count');
    const headerCartCount = document.querySelector('.header-cart-count');
    
    // Functions
    function openCart() {
      // First make the drawer visible
      cartDrawer.classList.remove('hidden');
      document.body.classList.add('overflow-hidden');
      
      // Then animate the backdrop opacity
      setTimeout(() => {
        cartBackdrop.classList.add('opacity-100');
        cartBackdrop.classList.remove('opacity-0');
      }, 10);
      
      // Then slide in the drawer
      setTimeout(() => {
        cartDrawerPanel.classList.remove('translate-x-full');
        cartDrawerPanel.classList.add('translate-x-0');
      }, 50);
    }
    
    function closeCart() {
      // First slide out the drawer
      cartDrawerPanel.classList.remove('translate-x-0');
      cartDrawerPanel.classList.add('translate-x-full');
      
      // Then fade out the backdrop
      setTimeout(() => {
        cartBackdrop.classList.remove('opacity-100');
        cartBackdrop.classList.add('opacity-0');
      }, 200);
      
      // Finally hide the entire drawer
      setTimeout(() => {
        cartDrawer.classList.add('hidden');
        document.body.classList.remove('overflow-hidden');
      }, 500);
    }
    
    function updateCartUI(cart) {
      // Update all cart counters on the page
      if (cartItemCount) {
        cartItemCount.textContent = cart.item_count;
      }
      
      if (headerCartCount) {
        headerCartCount.textContent = cart.item_count;
          // Add pulse animation
        headerCartCount.classList.add('animate-pulse', 'bg-white', 'text-orange-600');
        setTimeout(() => {
          headerCartCount.classList.remove('animate-pulse', 'bg-white', 'text-orange-600');
        }, 1000);
      }
        // Show notification for added product
      const notification = document.createElement('div');
      notification.className = 'fixed top-4 right-4 bg-green-50 border-l-4 border-green-500 text-green-700 p-4 shadow-sm rounded-sm z-50 transform translate-x-full transition-transform duration-300';
      notification.innerHTML = `
        <div class="flex items-center">
          <div class="py-1">
            <svg class="h-6 w-6 text-green-500 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
            </svg>
          </div>
          <div>
            <p class="font-medium">Item added to cart</p>
            <p class="text-sm">You have ${cart.item_count} items in your cart</p>
          </div>
        </div>
      `;
      
      document.body.appendChild(notification);
      
      setTimeout(() => {
        notification.classList.remove('translate-x-full');
      }, 10);
      
      setTimeout(() => {
        notification.classList.add('translate-x-full');
      }, 3000);
      
      setTimeout(() => {
        notification.remove();
      }, 3500);
    }
    
    // Event listeners
    if (closeCartButton) {
      closeCartButton.addEventListener('click', closeCart);
    }
    
    if (cartBackdrop) {
      cartBackdrop.addEventListener('click', closeCart);
    }
    
    if (continueShoppingButton) {
      continueShoppingButton.addEventListener('click', closeCart);
    }
    
    // Add to cart form handling with animation
    addToCartForms.forEach(form => {
      form.addEventListener('submit', function(event) {
        event.preventDefault();
        
        // Add loading state to form button
        const submitButton = form.querySelector('button[type="submit"]');
        const originalButtonText = submitButton.innerHTML;
        submitButton.innerHTML = '<svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>';
        submitButton.disabled = true;
        
        const formData = new FormData(form);
        
        fetch('/cart/add.js', {
          method: 'POST',
          body: formData
        })
        .then(response => response.json())
        .then(data => {
          // Reset button state
          submitButton.innerHTML = originalButtonText;
          submitButton.disabled = false;
          
          // Update cart count and UI
          fetch('/cart.js')
            .then(response => response.json())
            .then(cart => {
              updateCartUI(cart);
              openCart();
            })
            .catch(error => {
              console.error('Error fetching cart:', error);
              
              // Reset button state even on error
              submitButton.innerHTML = originalButtonText;
              submitButton.disabled = false;
            });
        })
        .catch(error => {
          console.error('Error adding to cart:', error);
          
          // Reset button state on error
          submitButton.innerHTML = originalButtonText;
          submitButton.disabled = false;
            // Show error notification
          const errorNotification = document.createElement('div');
          errorNotification.className = 'fixed top-4 right-4 bg-red-50 border-l-4 border-red-500 text-red-700 p-4 shadow-sm rounded-sm z-50';
          errorNotification.innerHTML = `
            <div class="flex">
              <div class="py-1">
                <svg class="h-6 w-6 text-red-500 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
              </div>
              <div>
                <p class="font-medium">Error adding item to cart</p>
                <p class="text-sm">Please try again</p>
              </div>
            </div>
          `;
          
          document.body.appendChild(errorNotification);
          
          setTimeout(() => {
            errorNotification.remove();
          }, 5000);
        });
      });
    });
    
    // Handle keyboard events (Escape key to close)
    document.addEventListener('keydown', function(event) {
      if (event.key === 'Escape' && !cartDrawer.classList.contains('hidden')) {
        closeCart();
      }
    });
    
    // Initialize - set initial state for animations
    if (cartBackdrop) {
      cartBackdrop.classList.add('opacity-0');
    }
    
    if (cartDrawerPanel) {
      cartDrawerPanel.classList.add('translate-x-full');
    }
  });
</script>
